{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\cbi\\\\netflixclone\\\\netflix\\\\src\\\\components\\\\Row.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport Axios from './Axios';\nimport Youtube from \"react-youtube\";\nimport movieTrailer from 'movie-trailer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst base_url = \"https://image.tmdb.org/t/p/original\";\nconst Row = _ref => {\n  _s();\n  let {\n    title,\n    fetchURL,\n    isLargeRow\n  } = _ref;\n  const [movies, setMovies] = useState([]);\n  const [trailerUrl, setTrailerUrl] = useState(\"\");\n  useEffect(() => {\n    async function fetchData() {\n      const request = await Axios.get(fetchURL);\n      setMovies(request.data.results);\n      console.log(request);\n      return request;\n    }\n    fetchData();\n  }, [fetchURL]);\n  const opts = {\n    height: \"390\",\n    width: \"100%\",\n    playerVars: {\n      autoplay: 1\n    }\n  };\n  const handleClick = movie => {\n    if (trailerUrl) {\n      setTrailerUrl('');\n    } else {\n      movieTrailer((movie === null || movie === void 0 ? void 0 : movie.name) || \"\").then(url => {\n        const urlParams = new URLSearchParams(new URL(url).search);\n        setTrailerUrl(urlParams.get(\"v\"));\n      }).catch(error => console.log(error));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row_posters\",\n      children: movies.map(movie => /*#__PURE__*/_jsxDEV(\"img\", {\n        onClick: () => handleClick(movie),\n        className: `row_poster ${isLargeRow && \"row_posterLarge\"}`,\n        src: `${base_url}${isLargeRow ? movie.poster_path : movie.backdrop_path}`,\n        alt: movie.name\n      }, movie.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 5\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 1\n    }, this), trailerUrl && /*#__PURE__*/_jsxDEV(Youtube, {\n      videoId: trailerUrl,\n      opts: opts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 16\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(Row, \"L1ywPNv5QsX47ZoMAyL8l4aBE/I=\");\n_c = Row;\nexport default Row;\nvar _c;\n$RefreshReg$(_c, \"Row\");","map":{"version":3,"names":["React","useState","useEffect","Axios","Youtube","movieTrailer","base_url","Row","title","fetchURL","isLargeRow","movies","setMovies","trailerUrl","setTrailerUrl","fetchData","request","get","data","results","console","log","opts","height","width","playerVars","autoplay","handleClick","movie","name","then","url","urlParams","URLSearchParams","URL","search","catch","error","map","poster_path","backdrop_path","id"],"sources":["C:/Users/cbi/netflixclone/netflix/src/components/Row.js"],"sourcesContent":["import React from 'react'\r\nimport { useState ,useEffect} from 'react';\r\nimport Axios from './Axios';\r\nimport Youtube from \"react-youtube\"\r\nimport movieTrailer from 'movie-trailer';\r\nconst base_url=\"https://image.tmdb.org/t/p/original\";\r\n const Row = ({title,fetchURL,isLargeRow}) => {\r\n    const [movies,setMovies]=useState([]);\r\n    const [trailerUrl,setTrailerUrl]=useState(\"\");\r\n    useEffect(()=>{\r\n        async function fetchData(){\r\n            const request=await Axios.get(fetchURL);\r\n            setMovies(request.data.results);\r\n       console.log(request);\r\n       return request;\r\n        }\r\n        fetchData();\r\n    },[fetchURL]);\r\n\r\n    const opts={\r\n      height:\"390\",\r\n      width:\"100%\",\r\n      playerVars:{\r\n\r\n        autoplay:1,\r\n      },\r\n    };\r\n    const handleClick=(movie)=>{\r\n      if(trailerUrl){\r\n        setTrailerUrl('');\r\n      }\r\n      else{\r\n        movieTrailer(movie?.name || \"\")\r\n      .then(url=>{\r\n        const urlParams= new URLSearchParams(new URL(url).search);\r\n      setTrailerUrl(urlParams.get(\"v\"))\r\n      })\r\n    .catch((error)=>console.log(error));\r\n    }\r\n    }\r\n\r\n  return (\r\n    <div className='row'>\r\n<h2>{title}</h2>\r\n<div className='row_posters'>\r\n  {movies.map(movie=>(\r\n    <img \r\n    key={movie.id}\r\n    onClick={()=>handleClick(movie)}\r\n    className={`row_poster ${isLargeRow && \"row_posterLarge\"}`}\r\n     src={`${base_url}${isLargeRow ? movie.poster_path : movie.backdrop_path}`} alt={movie.name}/>\r\n  ))}\r\n</div>\r\n{trailerUrl && <Youtube videoId={trailerUrl} opts={opts}/>}\r\n    </div>\r\n     )\r\n  }\r\n  \r\nexport default Row;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,EAAEC,SAAS,QAAO,OAAO;AAC1C,OAAOC,KAAK,MAAM,SAAS;AAC3B,OAAOC,OAAO,MAAM,eAAe;AACnC,OAAOC,YAAY,MAAM,eAAe;AAAC;AACzC,MAAMC,QAAQ,GAAC,qCAAqC;AACnD,MAAMC,GAAG,GAAG,QAAiC;EAAA;EAAA,IAAhC;IAACC,KAAK;IAACC,QAAQ;IAACC;EAAU,CAAC;EACrC,MAAM,CAACC,MAAM,EAACC,SAAS,CAAC,GAACX,QAAQ,CAAC,EAAE,CAAC;EACrC,MAAM,CAACY,UAAU,EAACC,aAAa,CAAC,GAACb,QAAQ,CAAC,EAAE,CAAC;EAC7CC,SAAS,CAAC,MAAI;IACV,eAAea,SAAS,GAAE;MACtB,MAAMC,OAAO,GAAC,MAAMb,KAAK,CAACc,GAAG,CAACR,QAAQ,CAAC;MACvCG,SAAS,CAACI,OAAO,CAACE,IAAI,CAACC,OAAO,CAAC;MACpCC,OAAO,CAACC,GAAG,CAACL,OAAO,CAAC;MACpB,OAAOA,OAAO;IACb;IACAD,SAAS,EAAE;EACf,CAAC,EAAC,CAACN,QAAQ,CAAC,CAAC;EAEb,MAAMa,IAAI,GAAC;IACTC,MAAM,EAAC,KAAK;IACZC,KAAK,EAAC,MAAM;IACZC,UAAU,EAAC;MAETC,QAAQ,EAAC;IACX;EACF,CAAC;EACD,MAAMC,WAAW,GAAEC,KAAK,IAAG;IACzB,IAAGf,UAAU,EAAC;MACZC,aAAa,CAAC,EAAE,CAAC;IACnB,CAAC,MACG;MACFT,YAAY,CAAC,CAAAuB,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEC,IAAI,KAAI,EAAE,CAAC,CAChCC,IAAI,CAACC,GAAG,IAAE;QACT,MAAMC,SAAS,GAAE,IAAIC,eAAe,CAAC,IAAIC,GAAG,CAACH,GAAG,CAAC,CAACI,MAAM,CAAC;QAC3DrB,aAAa,CAACkB,SAAS,CAACf,GAAG,CAAC,GAAG,CAAC,CAAC;MACjC,CAAC,CAAC,CACHmB,KAAK,CAAEC,KAAK,IAAGjB,OAAO,CAACC,GAAG,CAACgB,KAAK,CAAC,CAAC;IACnC;EACA,CAAC;EAEH,oBACE;IAAK,SAAS,EAAC,KAAK;IAAA,wBACxB;MAAA,UAAK7B;IAAK;MAAA;MAAA;MAAA;IAAA,QAAM,eAChB;MAAK,SAAS,EAAC,aAAa;MAAA,UACzBG,MAAM,CAAC2B,GAAG,CAACV,KAAK,iBACf;QAEA,OAAO,EAAE,MAAID,WAAW,CAACC,KAAK,CAAE;QAChC,SAAS,EAAG,cAAalB,UAAU,IAAI,iBAAkB,EAAE;QAC1D,GAAG,EAAG,GAAEJ,QAAS,GAAEI,UAAU,GAAGkB,KAAK,CAACW,WAAW,GAAGX,KAAK,CAACY,aAAc,EAAE;QAAC,GAAG,EAAEZ,KAAK,CAACC;MAAK,GAHvFD,KAAK,CAACa,EAAE;QAAA;QAAA;QAAA;MAAA,QAId;IAAC;MAAA;MAAA;MAAA;IAAA,QACE,EACL5B,UAAU,iBAAI,QAAC,OAAO;MAAC,OAAO,EAAEA,UAAW;MAAC,IAAI,EAAES;IAAK;MAAA;MAAA;MAAA;IAAA,QAAE;EAAA;IAAA;IAAA;IAAA;EAAA,QAChD;AAER,CAAC;AAAA,GAlDIf,GAAG;AAAA,KAAHA,GAAG;AAoDV,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}